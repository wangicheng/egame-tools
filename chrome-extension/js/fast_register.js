/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this extension
*/

(() => {
  // src/entry-points/fast_register.ts
  function generateRandomString() {
    const uuid = crypto.randomUUID();
    return uuid.substring(0, 8) + uuid.substring(9, 13) + uuid.substring(14, 17);
  }
  var observer = new MutationObserver(function(mutationList, observer2) {
    if (window.location.hash !== "") {
      return;
    }
    const registerButton = document.querySelector('div:has(> img[alt="註冊"])');
    if (!registerButton) {
      return;
    }
    if (document.querySelector("#fastRegisterButton")) {
      return;
    }
    const fastRegisterButton = document.createElement("div");
    fastRegisterButton.id = "fastRegisterButton";
    fastRegisterButton.style.position = "relative";
    fastRegisterButton.style.margin = "0 auto";
    fastRegisterButton.style.width = "24%";
    fastRegisterButton.style.height = "100%";
    fastRegisterButton.style.cursor = "pointer";
    const child_p = registerButton.querySelector("p").cloneNode(true);
    const child_img = registerButton.querySelector("img").cloneNode(true);
    child_p.textContent = "瞬間註冊";
    child_img.setAttribute("alt", "瞬間註冊");
    fastRegisterButton.appendChild(child_p);
    fastRegisterButton.appendChild(child_img);
    fastRegisterButton.addEventListener("click", (event) => {
      const username = generateRandomString();
      const password = generateRandomString();
      const name = "guest-" + generateRandomString().substring(6);
      document.querySelector("#username").value = username;
      document.querySelector("#password").value = password;
      document.querySelector("#passConfirm").value = password;
      document.querySelector("#nick_name").value = name;
      document.querySelector("#name").value = name;
      window.register.onInSchoolChange(false);
      setTimeout(() => {
        registerButton.click();
      }, 100);
    });
    registerButton.parentElement.appendChild(fastRegisterButton);
  });
  observer.observe(document.documentElement, { attributes: false, childList: true, subtree: true });
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2VudHJ5LXBvaW50cy9mYXN0X3JlZ2lzdGVyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbVN0cmluZygpIHtcbiAgY29uc3QgdXVpZCA9IGNyeXB0by5yYW5kb21VVUlEKCk7XG4gIHJldHVybiB1dWlkLnN1YnN0cmluZygwLCA4KSArIHV1aWQuc3Vic3RyaW5nKDksIDEzKSArIHV1aWQuc3Vic3RyaW5nKDE0LCAxNyk7XG59XG5cbmNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKG11dGF0aW9uTGlzdCwgb2JzZXJ2ZXIpIHtcbiAgaWYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoICE9PSAnJykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCByZWdpc3RlckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTERpdkVsZW1lbnQ+KCdkaXY6aGFzKD4gaW1nW2FsdD1cIuiou+WGilwiXSknKTtcbiAgaWYgKCFyZWdpc3RlckJ1dHRvbikge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zhc3RSZWdpc3RlckJ1dHRvbicpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgY29uc3QgZmFzdFJlZ2lzdGVyQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGZhc3RSZWdpc3RlckJ1dHRvbi5pZCA9ICdmYXN0UmVnaXN0ZXJCdXR0b24nO1xuICBmYXN0UmVnaXN0ZXJCdXR0b24uc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuICBmYXN0UmVnaXN0ZXJCdXR0b24uc3R5bGUubWFyZ2luID0gJzAgYXV0byc7XG4gIGZhc3RSZWdpc3RlckJ1dHRvbi5zdHlsZS53aWR0aCA9ICcyNCUnO1xuICBmYXN0UmVnaXN0ZXJCdXR0b24uc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICBmYXN0UmVnaXN0ZXJCdXR0b24uc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xuICBjb25zdCBjaGlsZF9wID0gcmVnaXN0ZXJCdXR0b24ucXVlcnlTZWxlY3RvcigncCcpIS5jbG9uZU5vZGUodHJ1ZSkgYXMgSFRNTFBhcmFncmFwaEVsZW1lbnQ7XG4gIGNvbnN0IGNoaWxkX2ltZyA9IHJlZ2lzdGVyQnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJ2ltZycpIS5jbG9uZU5vZGUodHJ1ZSkgYXMgSFRNTEltYWdlRWxlbWVudDtcbiAgY2hpbGRfcC50ZXh0Q29udGVudCA9ICfnnqzplpPoqLvlhoonO1xuICBjaGlsZF9pbWcuc2V0QXR0cmlidXRlKCdhbHQnLCAn556s6ZaT6Ki75YaKJyk7XG4gIGZhc3RSZWdpc3RlckJ1dHRvbi5hcHBlbmRDaGlsZChjaGlsZF9wKTtcbiAgZmFzdFJlZ2lzdGVyQnV0dG9uLmFwcGVuZENoaWxkKGNoaWxkX2ltZyk7XG4gIGZhc3RSZWdpc3RlckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgIC8vIGZhc3QgcmVzZ2l0ZXJcbiAgICBjb25zdCB1c2VybmFtZSA9IGdlbmVyYXRlUmFuZG9tU3RyaW5nKCk7XG4gICAgY29uc3QgcGFzc3dvcmQgPSBnZW5lcmF0ZVJhbmRvbVN0cmluZygpO1xuICAgIGNvbnN0IG5hbWUgPSAnZ3Vlc3QtJyArIGdlbmVyYXRlUmFuZG9tU3RyaW5nKCkuc3Vic3RyaW5nKDYpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTElucHV0RWxlbWVudD4oJyN1c2VybmFtZScpIS52YWx1ZSA9IHVzZXJuYW1lO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTElucHV0RWxlbWVudD4oJyNwYXNzd29yZCcpIS52YWx1ZSA9IHBhc3N3b3JkO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTElucHV0RWxlbWVudD4oJyNwYXNzQ29uZmlybScpIS52YWx1ZSA9IHBhc3N3b3JkO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTElucHV0RWxlbWVudD4oJyNuaWNrX25hbWUnKSEudmFsdWUgPSBuYW1lO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTElucHV0RWxlbWVudD4oJyNuYW1lJykhLnZhbHVlID0gbmFtZTtcbiAgICB3aW5kb3cucmVnaXN0ZXIub25JblNjaG9vbENoYW5nZShmYWxzZSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICByZWdpc3RlckJ1dHRvbi5jbGljaygpO1xuICAgIH0sIDEwMCk7XG4gIH0pO1xuICByZWdpc3RlckJ1dHRvbi5wYXJlbnRFbGVtZW50IS5hcHBlbmRDaGlsZChmYXN0UmVnaXN0ZXJCdXR0b24pO1xufSk7XG5vYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgeyBhdHRyaWJ1dGVzOiBmYWxzZSwgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pO1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7OztBQUFBLFdBQVMsdUJBQXVCO0FBQzlCLFVBQU0sT0FBTyxPQUFPLFdBQVc7QUFDL0IsV0FBTyxLQUFLLFVBQVUsR0FBRyxDQUFDLElBQUksS0FBSyxVQUFVLEdBQUcsRUFBRSxJQUFJLEtBQUssVUFBVSxJQUFJLEVBQUU7QUFBQSxFQUM3RTtBQUVBLE1BQU0sV0FBVyxJQUFJLGlCQUFpQixTQUFVLGNBQWNBLFdBQVU7QUFDdEUsUUFBSSxPQUFPLFNBQVMsU0FBUyxJQUFJO0FBQy9CO0FBQUEsSUFDRjtBQUNBLFVBQU0saUJBQWlCLFNBQVMsY0FBOEIsMEJBQTBCO0FBQ3hGLFFBQUksQ0FBQyxnQkFBZ0I7QUFDbkI7QUFBQSxJQUNGO0FBQ0EsUUFBSSxTQUFTLGNBQWMscUJBQXFCLEdBQUc7QUFDakQ7QUFBQSxJQUNGO0FBRUEsVUFBTSxxQkFBcUIsU0FBUyxjQUFjLEtBQUs7QUFDdkQsdUJBQW1CLEtBQUs7QUFDeEIsdUJBQW1CLE1BQU0sV0FBVztBQUNwQyx1QkFBbUIsTUFBTSxTQUFTO0FBQ2xDLHVCQUFtQixNQUFNLFFBQVE7QUFDakMsdUJBQW1CLE1BQU0sU0FBUztBQUNsQyx1QkFBbUIsTUFBTSxTQUFTO0FBQ2xDLFVBQU0sVUFBVSxlQUFlLGNBQWMsR0FBRyxFQUFHLFVBQVUsSUFBSTtBQUNqRSxVQUFNLFlBQVksZUFBZSxjQUFjLEtBQUssRUFBRyxVQUFVLElBQUk7QUFDckUsWUFBUSxjQUFjO0FBQ3RCLGNBQVUsYUFBYSxPQUFPLE1BQU07QUFDcEMsdUJBQW1CLFlBQVksT0FBTztBQUN0Qyx1QkFBbUIsWUFBWSxTQUFTO0FBQ3hDLHVCQUFtQixpQkFBaUIsU0FBUyxDQUFDLFVBQVU7QUFFdEQsWUFBTSxXQUFXLHFCQUFxQjtBQUN0QyxZQUFNLFdBQVcscUJBQXFCO0FBQ3RDLFlBQU0sT0FBTyxXQUFXLHFCQUFxQixFQUFFLFVBQVUsQ0FBQztBQUMxRCxlQUFTLGNBQWdDLFdBQVcsRUFBRyxRQUFRO0FBQy9ELGVBQVMsY0FBZ0MsV0FBVyxFQUFHLFFBQVE7QUFDL0QsZUFBUyxjQUFnQyxjQUFjLEVBQUcsUUFBUTtBQUNsRSxlQUFTLGNBQWdDLFlBQVksRUFBRyxRQUFRO0FBQ2hFLGVBQVMsY0FBZ0MsT0FBTyxFQUFHLFFBQVE7QUFDM0QsYUFBTyxTQUFTLGlCQUFpQixLQUFLO0FBQ3RDLGlCQUFXLE1BQU07QUFDZix1QkFBZSxNQUFNO0FBQUEsTUFDdkIsR0FBRyxHQUFHO0FBQUEsSUFDUixDQUFDO0FBQ0QsbUJBQWUsY0FBZSxZQUFZLGtCQUFrQjtBQUFBLEVBQzlELENBQUM7QUFDRCxXQUFTLFFBQVEsU0FBUyxpQkFBaUIsRUFBRSxZQUFZLE9BQU8sV0FBVyxNQUFNLFNBQVMsS0FBSyxDQUFDOyIsCiAgIm5hbWVzIjogWyJvYnNlcnZlciJdCn0K
